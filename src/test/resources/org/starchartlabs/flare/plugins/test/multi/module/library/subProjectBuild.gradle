plugins {
    id 'java'
    id 'jacoco'
    id 'maven-publish'
}

projectMetaData{
    github {
        repository 'owner', "${project.name}"
    }
    
    licenses {
        mit()
    }
}

dependencies {
    testCompile 'org.testng:testng'
}

test {
    useTestNG() {
        useDefaultListeners = true
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

repositories {
    mavenLocal()
}

task outputMavenArtifacts {
    doLast {
        publishing.publications.each { publication ->
            publication.artifacts.withType(MavenArtifact.class) { artifact ->
                project.logger.lifecycle("Artifact Verification: ${project.name}:${publication.name}:${artifact.classifier}")
            }
            
        }
    }
}

task outputTestLogging {
    doLast{
        tasks.withType(Test).all {
            project.logger.lifecycle("${it.name} Exception format: ${it.testLogging.exceptionFormat}")
            
            project.logger.lifecycle("${it.name} Quiet logging: ${it.testLogging.quiet.events}")
            project.logger.lifecycle("${it.name} Info logging: ${it.testLogging.info.events}")
            project.logger.lifecycle("${it.name} Debug logging: ${it.testLogging.debug.events}")
        }
    }
}

task metaDataPrintout {
    doLast{
        project.logger.lifecycle("url: ${projectMetaData.url}")
        
        project.logger.lifecycle("scm.vcsUrl: ${projectMetaData.scm.vcsUrl}")
        project.logger.lifecycle("scm.connection: ${projectMetaData.scm.connection}")
        project.logger.lifecycle("scm.developerConnection: ${projectMetaData.scm.developerConnection}")
        
        projectMetaData.developers.each { developer ->
            project.logger.lifecycle("developer: ${developer.id}:${developer.name}:${developer.url}")
        }
        
        projectMetaData.contributors.each { contributor ->
            project.logger.lifecycle("contributor: ${contributor.name}:${contributor.url}")
        }
        
        projectMetaData.licenses.each { license ->
            project.logger.lifecycle("license: ${license.name}:${license.tag}:${license.url}:${license.distribution}")
        }
    }
}

check.dependsOn outputTestLogging
check.dependsOn outputMavenArtifacts
check.dependsOn metaDataPrintout
check.dependsOn generatePomFileForMavenPublication
